{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/allen/istakk-inventory/client/app/%28components%29/Rating/index.tsx"],"sourcesContent":["import { Star } from 'lucide-react'\r\nimport React from 'react'\r\n\r\ntype RatingProps = {}\r\n\r\nconst Rating = ({ rating }: RatingProps) => {\r\n  return [1, 2, 3, 4, 5].map((index) => (\r\n    <Star\r\n        key={index}\r\n        color={index <= rating ? \"#FFC107\" : \"#E4E5E9\"}\r\n        className=\"w-4 h-4\"\r\n    />\r\n  ))\r\n}\r\n\r\nexport default Rating"],"names":[],"mappings":";;;;AAAA;;;AAKA,MAAM,SAAS,CAAC,EAAE,MAAM,EAAe;IACrC,OAAO;QAAC;QAAG;QAAG;QAAG;QAAG;KAAE,CAAC,GAAG,CAAC,CAAC,sBAC1B,6LAAC,qMAAA,CAAA,OAAI;YAED,OAAO,SAAS,SAAS,YAAY;YACrC,WAAU;WAFL;;;;;AAKb;KARM;uCAUS"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/allen/istakk-inventory/client/app/dashboard/CardPopularProducts.tsx"],"sourcesContent":["import { useGetDashboardMetricsQuery } from '@/state/api'\r\nimport { ShoppingBag } from 'lucide-react';\r\nimport React from 'react'\r\nimport Rating from '../(components)/Rating';\r\n\r\ntype Props = {}\r\n\r\nconst CardPopularProducts = () => {\r\n    const { data: dashboardMetrics, isLoading } = useGetDashboardMetricsQuery();\r\n\r\n  return (\r\n    <div className=\"row-span-3 xl:row-span-6 bg-white shadow-md rounded-2xl pb-16\">\r\n        {isLoading ? (\r\n            <div className=\"m-5\">Loading...</div>\r\n        ): (\r\n            <>\r\n                <h3 className=\"text-lg font-semibold px-7 pt-5 pb-2\">\r\n                    Popular Products\r\n                </h3>\r\n                <hr />\r\n                <div className=\"overflow-auto h-full\">\r\n                    {dashboardMetrics?.popularProducts.map((product) => (\r\n                        <div \r\n                            key={product.productId}\r\n                            className=\"flex items-center justify-between gap-3 px-5 py-7 border-b\"\r\n                        >   \r\n                            <div className=\"flex items-center gap-3\">\r\n                            <div>img</div>\r\n                            <div className=\"flex flex-col justify-between gap-1\">\r\n                                <div className=\"font-bold text-gray-700\"> {product.name} </div>\r\n                                <div className=\"flex text-sm items-center\">\r\n                                    <span className=\"font-bold text-blue-500 text-xs\">\r\n                                        ${product.price}\r\n                                    </span>\r\n                                    <span className=\"mx-2\">|</span>\r\n                                    <Rating rating={product.rating || 0} />\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n\r\n                            <div className=\"text-xs flex-items-center\">\r\n                                <button className=\"p-2 rounded-full bg-blue-100 text-blue-600 mr-2\">\r\n                                    <ShoppingBag className=\"w-4 h-4\" />\r\n                                </button>\r\n                                {Math.round(product.stockQuantity / 1000)}k Sold\r\n                            </div>   \r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardPopularProducts"],"names":[],"mappings":";;;;AAAA;AAGA;AAFA;;;;;;AAMA,MAAM,sBAAsB;;IACxB,MAAM,EAAE,MAAM,gBAAgB,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,+GAAA,CAAA,8BAA2B,AAAD;IAE1E,qBACE,6LAAC;QAAI,WAAU;kBACV,0BACG,6LAAC;YAAI,WAAU;sBAAM;;;;;iCAErB;;8BACI,6LAAC;oBAAG,WAAU;8BAAuC;;;;;;8BAGrD,6LAAC;;;;;8BACD,6LAAC;oBAAI,WAAU;8BACV,kBAAkB,gBAAgB,IAAI,CAAC,wBACpC,6LAAC;4BAEG,WAAU;;8CAEV,6LAAC;oCAAI,WAAU;;sDACf,6LAAC;sDAAI;;;;;;sDACL,6LAAC;4CAAI,WAAU;;8DACX,6LAAC;oDAAI,WAAU;;wDAA0B;wDAAE,QAAQ,IAAI;wDAAC;;;;;;;8DACxD,6LAAC;oDAAI,WAAU;;sEACX,6LAAC;4DAAK,WAAU;;gEAAkC;gEAC5C,QAAQ,KAAK;;;;;;;sEAEnB,6LAAC;4DAAK,WAAU;sEAAO;;;;;;sEACvB,6LAAC,4IAAA,CAAA,UAAM;4DAAC,QAAQ,QAAQ,MAAM,IAAI;;;;;;;;;;;;;;;;;;;;;;;;8CAK1C,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CAAO,WAAU;sDACd,cAAA,6LAAC,uNAAA,CAAA,cAAW;gDAAC,WAAU;;;;;;;;;;;wCAE1B,KAAK,KAAK,CAAC,QAAQ,aAAa,GAAG;wCAAM;;;;;;;;2BArBzC,QAAQ,SAAS;;;;;;;;;;;;;;;;;AA8BlD;GA9CM;;QAC4C,+GAAA,CAAA,8BAA2B;;;KADvE;uCAgDS"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/allen/istakk-inventory/client/app/dashboard/CardSalesSummary.tsx"],"sourcesContent":["import { useGetDashboardMetricsQuery } from \"@/state/api\";\r\nimport { TrendingUp } from \"lucide-react\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\n\r\nconst CardSalesSummary = () => {\r\n  const { data, isLoading, isError } = useGetDashboardMetricsQuery();\r\n  const salesData = data?.salesSummary || [];\r\n\r\n  const [timeframe, setTimeframe] = useState(\"weekly\");\r\n\r\n  const totalValueSum =\r\n    salesData.reduce((acc, curr) => acc + curr.totalValue, 0) || 0;\r\n\r\n  const averageChangePercentage =\r\n    salesData.reduce((acc, curr, _, array) => {\r\n      return acc + curr.changePercentage! / array.length;\r\n    }, 0) || 0;\r\n\r\n  const highestValueData = salesData.reduce((acc, curr) => {\r\n    return acc.totalValue > curr.totalValue ? acc : curr;\r\n  }, salesData[0] || {});\r\n\r\n  const highestValueDate = highestValueData.date\r\n    ? new Date(highestValueData.date).toLocaleDateString(\"en-US\", {\r\n        month: \"numeric\",\r\n        day: \"numeric\",\r\n        year: \"2-digit\",\r\n      })\r\n    : \"N/A\";\r\n\r\n  if (isError) {\r\n    return <div className=\"m-5\">Failed to fetch data</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row-span-3 xl:row-span-6 bg-white shadow-md rounded-2xl flex flex-col justify-between\">\r\n      {isLoading ? (\r\n        <div className=\"m-5\">Loading...</div>\r\n      ) : (\r\n        <>\r\n          {/* HEADER */}\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold mb-2 px-7 pt-5\">\r\n              Sales Summary\r\n            </h3>\r\n            <hr />\r\n          </div>\r\n\r\n          {/* BODY */}\r\n          <div>\r\n            {/* BODY HEADER */}\r\n            <div className=\"flex justify-between items-center mb-6 px-7 mt-5\">\r\n              <div className=\"text-lg font-medium\">\r\n                <p className=\"text-xs text-gray-400\">Value</p>\r\n                <span className=\"text-2xl font-extrabold\">\r\n                  $\r\n                  {(totalValueSum / 1000000).toLocaleString(\"en\", {\r\n                    maximumFractionDigits: 2,\r\n                  })}\r\n                  m\r\n                </span>\r\n                <span className=\"text-green-500 text-sm ml-2\">\r\n                  <TrendingUp className=\"inline w-4 h-4 mr-1\" />\r\n                  {averageChangePercentage.toFixed(2)}%\r\n                </span>\r\n              </div>\r\n              <select\r\n                className=\"shadow-sm border border-gray-300 bg-white p-2 rounded\"\r\n                value={timeframe}\r\n                onChange={(e) => {\r\n                  setTimeframe(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"daily\">Daily</option>\r\n                <option value=\"weekly\">Weekly</option>\r\n                <option value=\"monthly\">Monthly</option>\r\n              </select>\r\n            </div>\r\n            {/* CHART */}\r\n            <ResponsiveContainer width=\"100%\" height={350} className=\"px-7\">\r\n              <BarChart\r\n                data={salesData}\r\n                margin={{ top: 0, right: 0, left: -25, bottom: 0 }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"\" vertical={false} />\r\n                <XAxis\r\n                  dataKey=\"date\"\r\n                  tickFormatter={(value) => {\r\n                    const date = new Date(value);\r\n                    return `${date.getMonth() + 1}/${date.getDate()}`;\r\n                  }}\r\n                />\r\n                <YAxis\r\n                  tickFormatter={(value) => {\r\n                    return `$${(value / 1000000).toFixed(0)}m`;\r\n                  }}\r\n                  tick={{ fontSize: 12, dx: -1 }}\r\n                  tickLine={false}\r\n                  axisLine={false}\r\n                />\r\n                <Tooltip\r\n                  formatter={(value: number) => [\r\n                    `$${value.toLocaleString(\"en\")}`,\r\n                  ]}\r\n                  labelFormatter={(label) => {\r\n                    const date = new Date(label);\r\n                    return date.toLocaleDateString(\"en-US\", {\r\n                      year: \"numeric\",\r\n                      month: \"long\",\r\n                      day: \"numeric\",\r\n                    });\r\n                  }}\r\n                />\r\n                <Bar\r\n                  dataKey=\"totalValue\"\r\n                  fill=\"#3182ce\"\r\n                  barSize={10}\r\n                  radius={[10, 10, 0, 0]}\r\n                />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          {/* FOOTER */}\r\n          <div>\r\n            <hr />\r\n            <div className=\"flex justify-between items-center mt-6 text-sm px-7 mb-4\">\r\n              <p>{salesData.length || 0} days</p>\r\n              <p className=\"text-sm\">\r\n                Highest Sales Date:{\" \"}\r\n                <span className=\"font-bold\">{highestValueDate}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardSalesSummary;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/allen/istakk-inventory/client/app/dashboard/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport CardPopularProducts from \"./CardPopularProducts\"\r\nimport CardSalesSummary from \"./CardSalesSummary\"\r\n\r\n\r\nconst Dashboard = () => {\r\n  return <div\r\n    className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 xl:overflow-auto gap-10 pd-4 custom-grid-rows\">\r\n      <CardPopularProducts />\r\n      <CardSalesSummary />\r\n      <div className=\"row-span-2 xl:row-span-3 col-span-1 md:col-span-2 xl:col-span-1 bg-gray-500\" />\r\n      <div className=\"row-span-3 bg-gray-500\" />\r\n      <div className=\"row-span-1 xl:row-span-2 bg-gray-500\" />\r\n      <div className=\"row-span-1 xl:row-span-2 bg-gray-500\" />\r\n      <div className=\"row-span-1 xl:row-span-2 bg-gray-500\" />\r\n    </div>\r\n}\r\n\r\nexport default Dashboard"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAMA,MAAM,YAAY;IAChB,qBAAO,6LAAC;QACN,WAAU;;0BACR,6LAAC,2IAAA,CAAA,UAAmB;;;;;0BACpB,6LAAC,wIAAA,CAAA,UAAgB;;;;;0BACjB,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAI,WAAU;;;;;;;;;;;;AAErB;KAXM;uCAaS"}},
    {"offset": {"line": 643, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}